

                              ____________________________
                                                            .OOo
                                                            OOOOL
                                   __________________    .. JOOO?
                                                      .eSSSSSS**'
                                                    gSSSSSSSSSS    6.
                                                    oo  SSSSSSSs  .G
                                       ___________   oo SSSSSSSSSgG
                                                      *ISSSSSS  **
                                                       SSSSSSS
                                                     .oYSSSSSY.
                                                     OOOOOOOOOOOg
                                                    .OOOOT**TOOOOO.
                         ______________________    .OOOO'     'OOOOO.
                                                  .OOOO'         OOOO'
                                               .oOOOO*        .OOOO*
                                             .OOOOO''       .OOOOO
                                          .JOOOO*         .##OOO'
                                         C##?/             T##I
                                          Y#|                'V
     Node Haste ________________________   C



Node Haste is a dependency management system for static resources for node.js


HOW DOES IT WORK?

The goal of node haste is to build or update a map of static resources in given
directories. For that it scans provided directories for static resources: JS,
CSS, Images, Tests, etc. Once the resources are found haste compares mtimes to
the resources in an existing map. It also checks for package.json configuration
changes. It then starts parsing all affected files to extract useful
information: dependencies, processing options, size, etc.
Once scanned it will update the map with the new data.


EXAMPLE

  // where and what files to search for
  var finder = new FileFinder({
    scanDirs: '.',
    extensions: ['.js', '.css', '.json']
  });

  // what types to analyze
  var types = new ResourceTypes([JS, CSS, ProjectConfiguration]);

  // load existing cache
  var serializer = new ResourceMapSerializer(types);
  serializer.loadFromPath('.cache', function(err, map) {

    // run an update task to scan and analyze changed files
    new MapUpdateTask(finder, types, map).on('complete', function() {

      // map will be updated at this point
      console.log(map.getResource('JS', 'foo').requiredCSS);
    });
  });


TESTING

Node haste is covered with unit tests. The unit tests use Jasmine. Any
compatible runner can be used to run the tests.

  npm install jasmine-node
  jasmine-node --matchall __tests__/
